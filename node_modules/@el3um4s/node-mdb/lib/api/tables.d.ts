import { Columns, GenericObject, TableContents, ReadEvents } from "../interfaces/Interfaces";
export declare const table: {
    list: (data: {
        database: string;
    }) => Promise<string[]>;
    all: (data: {
        database: string;
    }) => Promise<string[]>;
    system: (data: {
        database: string;
    }) => Promise<string[]>;
    schema: (data: {
        database: string;
        table: string;
    }) => Promise<Columns[]>;
    read: (data: {
        database: string;
        table: string;
    }) => Promise<GenericObject[]>;
    select: (data: {
        database: string;
        table: string;
        columns?: string[];
        where?: string;
    }) => Promise<GenericObject[]>;
    count: (data: {
        database: string;
        table: string;
    }) => Promise<number>;
    listToFile: (data: {
        database: string;
        file: string;
    }) => Promise<boolean>;
    exportToFileJSON: (data: {
        database: string;
        table: string;
        file: string;
    }) => Promise<boolean>;
    exportToFileCSV: (data: {
        database: string;
        table: string;
        file: string;
    }) => Promise<boolean>;
    readAllTables: (data: {
        database: string;
        events?: ReadEvents;
    }) => Promise<TableContents[]>;
    exportAllTablesToFileJSON: (data: {
        database: string;
        folder: string;
        events?: ReadEvents;
    }) => Promise<boolean>;
    exportAllTablesToFileCSV: (data: {
        database: string;
        folder: string;
        events?: ReadEvents;
    }) => Promise<boolean>;
};
